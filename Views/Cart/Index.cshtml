@model BookStoreMVC.Models.ViewModels.CartViewModel

@{
    ViewData["Title"] = "Giỏ hàng";
}

@section Styles {
    <style>
        .cart-item {
            transition: all 0.3s ease;
        }
        .cart-item:hover {
            background-color: #f9fafb;
        }
        .summary-card {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        }
        .quantity-input {
            width: 80px;
        }
    </style>
}

<div class="max-w-7xl mx-auto">
    <!-- Page Header -->
    <div class="mb-8">
        <h1 class="text-3xl font-bold text-gray-800 mb-2">Giỏ hàng của bạn</h1>
        <p class="text-gray-600">
            @if (Model.IsEmpty)
            {
                <span>Giỏ hàng trống</span>
            }
            else
            {
                <span>@Model.ItemCount sản phẩm trong giỏ hàng</span>
            }
        </p>
    </div>

    @if (Model.IsEmpty)
    {
        <!-- Empty Cart -->
        <div class="text-center py-16">
            <div class="w-32 h-32 mx-auto mb-6 bg-gray-100 rounded-full flex items-center justify-center">
                <i class="fas fa-shopping-cart text-5xl text-gray-400"></i>
            </div>
            <h2 class="text-2xl font-semibold text-gray-800 mb-4">Giỏ hàng trống</h2>
            <p class="text-gray-600 mb-8">Bạn chưa thêm sản phẩm nào vào giỏ hàng</p>
            <a asp-controller="Books" asp-action="Index" 
               class="bg-blue-600 hover:bg-blue-700 text-white px-8 py-3 rounded-lg font-semibold transition-colors">
                <i class="fas fa-book mr-2"></i>
                Khám phá sách hay
            </a>
        </div>
    }
    else
    {
        <div class="grid grid-cols-1 lg:grid-cols-3 gap-8">
            <!-- Cart Items -->
            <div class="lg:col-span-2">
                <div class="bg-white rounded-lg shadow-sm overflow-hidden">
                    <!-- Header -->
                    <div class="bg-gray-50 px-6 py-4 border-b">
                        <div class="grid grid-cols-12 gap-4 text-sm font-semibold text-gray-700">
                            <div class="col-span-6">Sản phẩm</div>
                            <div class="col-span-2 text-center">Đơn giá</div>
                            <div class="col-span-2 text-center">Số lượng</div>
                            <div class="col-span-2 text-center">Thành tiền</div>
                        </div>
                    </div>

                    <!-- Cart Items -->
                    <div class="divide-y divide-gray-200">
                        @foreach (var item in Model.Items)
                        {
                            <div class="cart-item p-6" id="cart-item-@item.BookId">
                                <div class="grid grid-cols-12 gap-4 items-center">
                                    <!-- Book Info -->
                                    <div class="col-span-6">
                                        <div class="flex items-center space-x-4">
                                            <img src="@(item.Book.ImageUrl ?? "/images/no-book-cover.png")" 
                                                 alt="@item.Book.Title" 
                                                 class="w-16 h-20 object-cover rounded" />
                                            <div class="flex-1 min-w-0">
                                                <h3 class="font-semibold text-gray-800 line-clamp-2">
                                                    <a asp-controller="Books" asp-action="Details" asp-route-id="@item.BookId" 
                                                       class="hover:text-blue-600 transition-colors">
                                                        @item.Book.Title
                                                    </a>
                                                </h3>
                                                <p class="text-gray-600 text-sm mt-1">@item.Book.Author</p>
                                                <div class="flex items-center mt-2">
                                                    @if (!item.InStock)
                                                    {
                                                        <span class="text-red-600 text-sm font-semibold">
                                                            <i class="fas fa-exclamation-triangle mr-1"></i>
                                                            Hết hàng
                                                        </span>
                                                    }
                                                    else if (item.Book.StockQuantity < item.Quantity)
                                                    {
                                                        <span class="text-orange-600 text-sm font-semibold">
                                                            <i class="fas fa-exclamation-triangle mr-1"></i>
                                                            Chỉ còn @item.Book.StockQuantity cuốn
                                                        </span>
                                                    }
                                                    else
                                                    {
                                                        <span class="text-green-600 text-sm">
                                                            <i class="fas fa-check-circle mr-1"></i>
                                                            Còn hàng
                                                        </span>
                                                    }
                                                </div>
                                            </div>
                                        </div>
                                    </div>

                                    <!-- Unit Price -->
                                    <div class="col-span-2 text-center">
                                        <div class="font-semibold text-gray-800">
                                            @item.UnitPrice.ToString("C0")
                                        </div>
                                    </div>

                                    <!-- Quantity -->
                                    <div class="col-span-2">
                                        <div class="flex items-center justify-center space-x-2">
                                            <button onclick="updateQuantity(@item.BookId, @(item.Quantity - 1))" 
                                                    class="w-8 h-8 bg-gray-200 hover:bg-gray-300 rounded-lg flex items-center justify-center transition-colors"
                                                    @(item.Quantity <= 1 ? "disabled" : "")>
                                                <i class="fas fa-minus text-sm"></i>
                                            </button>
                                            <input type="number" value="@item.Quantity" 
                                                   min="1" max="@item.MaxQuantity"
                                                   class="quantity-input text-center border border-gray-300 rounded-lg py-1" 
                                                   onchange="updateQuantity(@item.BookId, this.value)" />
                                            <button onclick="updateQuantity(@item.BookId, @(item.Quantity + 1))" 
                                                    class="w-8 h-8 bg-gray-200 hover:bg-gray-300 rounded-lg flex items-center justify-center transition-colors"
                                                    @(item.Quantity >= item.MaxQuantity ? "disabled" : "")>
                                                <i class="fas fa-plus text-sm"></i>
                                            </button>
                                        </div>
                                    </div>

                                    <!-- Total Price -->
                                    <div class="col-span-2 text-center">
                                        <div class="font-bold text-blue-600" id="item-total-@item.BookId">
                                            @item.TotalPrice.ToString("C0")
                                        </div>
                                        <button onclick="removeFromCart(@item.BookId)" 
                                                class="text-red-600 hover:text-red-800 text-sm mt-2 transition-colors">
                                            <i class="fas fa-trash-alt mr-1"></i>
                                            Xóa
                                        </button>
                                    </div>
                                </div>
                            </div>
                        }
                    </div>

                    <!-- Cart Actions -->
                    <div class="bg-gray-50 px-6 py-4 border-t">
                        <div class="flex justify-between items-center">
                            <button onclick="clearCart()" 
                                    class="text-red-600 hover:text-red-800 font-semibold transition-colors">
                                <i class="fas fa-trash-alt mr-2"></i>
                                Xóa tất cả
                            </button>
                            <a asp-controller="Books" asp-action="Index" 
                               class="text-blue-600 hover:text-blue-800 font-semibold transition-colors">
                                <i class="fas fa-arrow-left mr-2"></i>
                                Tiếp tục mua sắm
                            </a>
                        </div>
                    </div>
                </div>
            </div>

            <!-- Order Summary -->
            <div class="lg:col-span-1">
                <div class="sticky top-4">
                    <div class="summary-card text-white p-6 rounded-lg shadow-lg">
                        <h3 class="text-xl font-bold mb-4">Tổng cộng</h3>
                        
                        <div class="space-y-3">
                            <div class="flex justify-between">
                                <span>Tạm tính:</span>
                                <span id="subtotal">@Model.SubTotal.ToString("C0")</span>
                            </div>
                            <div class="flex justify-between">
                                <span>Thuế (10%):</span>
                                <span id="tax">@Model.Tax.ToString("C0")</span>
                            </div>
                            <div class="flex justify-between">
                                <span>Phí vận chuyển:</span>
                                <span id="shipping">
                                    @if (Model.QualifiesForFreeShipping)
                                    {
                                        <span class="text-green-300">Miễn phí</span>
                                    }
                                    else
                                    {
                                        @Model.ShippingCost.ToString("C0")
                                    }
                                </span>
                            </div>
                            
                            @if (!Model.QualifiesForFreeShipping)
                            {
                                <div class="text-sm opacity-90 bg-white bg-opacity-10 p-3 rounded">
                                    <i class="fas fa-truck mr-2"></i>
                                    Mua thêm @Model.AmountForFreeShipping.ToString("C0") để được miễn phí vận chuyển
                                </div>
                            }
                            
                            <hr class="border-white opacity-30" />
                            
                            <div class="flex justify-between text-xl font-bold">
                                <span>Tổng cộng:</span>
                                <span id="total">@Model.Total.ToString("C0")</span>
                            </div>
                        </div>

                        <div class="mt-6 space-y-3">
                            @if (User.Identity?.IsAuthenticated == true)
                            {
                                <a asp-controller="Orders" asp-action="Checkout" 
                                   class="block w-full bg-yellow-500 hover:bg-yellow-600 text-gray-800 py-3 px-4 rounded-lg font-bold text-center transition-colors">
                                    <i class="fas fa-credit-card mr-2"></i>
                                    Thanh toán
                                </a>
                            }
                            else
                            {
                                <a asp-controller="Account" asp-action="Login" asp-route-returnUrl="/Orders/Checkout" 
                                   class="block w-full bg-yellow-500 hover:bg-yellow-600 text-gray-800 py-3 px-4 rounded-lg font-bold text-center transition-colors">
                                    <i class="fas fa-sign-in-alt mr-2"></i>
                                    Đăng nhập để thanh toán
                                </a>
                            }
                            
                            <!-- Save for Later -->
                            @if (User.Identity?.IsAuthenticated == true)
                            {
                                <button onclick="saveForLater()" 
                                        class="block w-full border border-white text-white hover:bg-white hover:text-gray-800 py-2 px-4 rounded-lg font-semibold text-center transition-colors">
                                    <i class="fas fa-heart mr-2"></i>
                                    Lưu vào danh sách yêu thích
                                </button>
                            }
                        </div>
                    </div>

                    <!-- Security Notice -->
                    <div class="mt-4 bg-white p-4 rounded-lg shadow-sm">
                        <div class="flex items-center space-x-2 text-gray-600">
                            <i class="fas fa-lock text-green-600"></i>
                            <span class="text-sm">Thanh toán an toàn và bảo mật</span>
                        </div>
                        <div class="flex items-center space-x-2 text-gray-600 mt-2">
                            <i class="fas fa-truck text-blue-600"></i>
                            <span class="text-sm">Giao hàng toàn quốc</span>
                        </div>
                        <div class="flex items-center space-x-2 text-gray-600 mt-2">
                            <i class="fas fa-undo text-orange-600"></i>
                            <span class="text-sm">Đổi trả trong 7 ngày</span>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    }
</div>

@section Scripts {
    <script>
        function updateQuantity(bookId, newQuantity) {
            if (newQuantity < 1) {
                removeFromCart(bookId);
                return;
            }

            fetch('/Cart/UpdateCartItem', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('[name="__RequestVerificationToken"]')?.value || ''
                },
                body: JSON.stringify({
                    bookId: bookId,
                    quantity: parseInt(newQuantity)
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Update item total
                    const itemTotal = document.getElementById(`item-total-${bookId}`);
                    if (itemTotal) {
                        itemTotal.textContent = data.itemTotal;
                    }
                    
                    // Update summary
                    updateSummary(data.cart);
                    updateCartCount(data.cart.itemCount);
                    
                    showNotification('Đã cập nhật giỏ hàng!', 'success');
                } else {
                    showNotification(data.message || 'Có lỗi xảy ra!', 'error');
                    location.reload(); // Reload to sync state
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showNotification('Có lỗi xảy ra!', 'error');
                location.reload();
            });
        }

        function removeFromCart(bookId) {
            if (!confirm('Bạn có chắc muốn xóa sản phẩm này khỏi giỏ hàng?')) {
                return;
            }

            fetch('/Cart/RemoveFromCart', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('[name="__RequestVerificationToken"]')?.value || ''
                },
                body: JSON.stringify({
                    bookId: bookId
                })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    // Remove item from UI
                    const itemElement = document.getElementById(`cart-item-${bookId}`);
                    if (itemElement) {
                        itemElement.style.transition = 'opacity 0.3s ease';
                        itemElement.style.opacity = '0';
                        setTimeout(() => {
                            itemElement.remove();
                            
                            // Check if cart is empty
                            if (data.cart.itemCount === 0) {
                                location.reload();
                            } else {
                                updateSummary(data.cart);
                                updateCartCount(data.cart.itemCount);
                            }
                        }, 300);
                    }
                    
                    showNotification('Đã xóa khỏi giỏ hàng!', 'success');
                } else {
                    showNotification(data.message || 'Có lỗi xảy ra!', 'error');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showNotification('Có lỗi xảy ra!', 'error');
            });
        }

        function clearCart() {
            if (!confirm('Bạn có chắc muốn xóa tất cả sản phẩm khỏi giỏ hàng?')) {
                return;
            }

            fetch('/Cart/ClearCart', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('[name="__RequestVerificationToken"]')?.value || ''
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    location.reload();
                } else {
                    showNotification(data.message || 'Có lỗi xảy ra!', 'error');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showNotification('Có lỗi xảy ra!', 'error');
            });
        }

        function saveForLater() {
            // This would move all cart items to wishlist
            if (!confirm('Bạn có muốn lưu tất cả sản phẩm vào danh sách yêu thích và xóa khỏi giỏ hàng?')) {
                return;
            }

            fetch('/Cart/SaveForLater', {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('[name="__RequestVerificationToken"]')?.value || ''
                }
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    showNotification('Đã lưu vào danh sách yêu thích!', 'success');
                    setTimeout(() => {
                        location.reload();
                    }, 1000);
                } else {
                    showNotification(data.message || 'Có lỗi xảy ra!', 'error');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showNotification('Có lỗi xảy ra!', 'error');
            });
        }

        function updateSummary(cart) {
            document.getElementById('subtotal').textContent = cart.subTotal;
            document.getElementById('tax').textContent = cart.tax;
            document.getElementById('total').textContent = cart.total;
            
            const shippingElement = document.getElementById('shipping');
            if (cart.qualifiesForFreeShipping) {
                shippingElement.innerHTML = '<span class="text-green-300">Miễn phí</span>';
            } else {
                shippingElement.textContent = cart.shippingCost;
            }
        }

        function showNotification(message, type) {
            const notification = document.createElement('div');
            notification.className = `fixed top-4 right-4 px-6 py-3 rounded-lg text-white z-50 ${
                type === 'success' ? 'bg-green-500' :
                type === 'error' ? 'bg-red-500' :
                type === 'info' ? 'bg-blue-500' : 'bg-gray-500'
            }`;
            notification.textContent = message;
            
            document.body.appendChild(notification);
            
            setTimeout(() => {
                notification.remove();
            }, 3000);
        }

        function updateCartCount(count) {
            const cartCountElements = document.querySelectorAll('.cart-count');
            cartCountElements.forEach(element => {
                element.textContent = count;
            });
        }
    </script>
}