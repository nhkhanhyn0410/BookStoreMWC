@* @model ReportsViewModel
@{
    ViewData["Title"] = "Báo cáo";
    Layout = "_AdminLayout";
}

<div class="d-sm-flex align-items-center justify-content-between mb-4">
    <h1 class="h3 mb-0 text-gray-800">Báo cáo</h1>
</div>

<!-- Report Generator -->
<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Tạo báo cáo tùy chỉnh</h6>
    </div>
    <div class="card-body">
        <form id="reportForm">
            <div class="row">
                <div class="col-md-3">
                    <div class="mb-3">
                        <label class="form-label">Loại báo cáo</label>
                        <select name="reportType" class="form-select" required>
                            <option value="">Chọn loại báo cáo</option>
                            <option value="sales">Doanh số bán hàng</option>
                            <option value="inventory">Tồn kho</option>
                            <option value="customers">Khách hàng</option>
                            <option value="products">Sản phẩm</option>
                            <option value="financial">Tài chính</option>
                        </select>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="mb-3">
                        <label class="form-label">Từ ngày</label>
                        <input type="date" name="fromDate" class="form-control" required>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="mb-3">
                        <label class="form-label">Đến ngày</label>
                        <input type="date" name="toDate" class="form-control" required>
                    </div>
                </div>
                <div class="col-md-2">
                    <div class="mb-3">
                        <label class="form-label">Định dạng</label>
                        <select name="format" class="form-select">
                            <option value="excel">Excel</option>
                            <option value="pdf">PDF</option>
                            <option value="csv">CSV</option>
                        </select>
                    </div>
                </div>
                <div class="col-md-3">
                    <div class="mb-3">
                        <label class="form-label">&nbsp;</label>
                        <div class="d-grid">
                            <button type="submit" class="btn btn-primary">
                                <i class="fas fa-file-export me-1"></i>
                                Tạo báo cáo
                            </button>
                        </div>
                    </div>
                </div>
            </div>
        </form>
    </div>
</div>

<!-- Quick Reports -->
<div class="row">
    <div class="col-xl-3 col-md-6 mb-4">
        <div class="card border-left-primary shadow h-100 py-2 report-card"
            onclick="generateQuickReport('daily-sales')">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">
                            Doanh số hôm nay
                        </div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.TodaySales.ToString("C")</div>
                        <small class="text-muted">Nhấn để xuất báo cáo</small>
                    </div>
                    <div class="col-auto">
                        <i class="fas fa-chart-line fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-xl-3 col-md-6 mb-4">
        <div class="card border-left-success shadow h-100 py-2 report-card"
            onclick="generateQuickReport('monthly-summary')">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-success text-uppercase mb-1">
                            Tổng kết tháng
                        </div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.MonthlyOrders</div>
                        <small class="text-muted">Nhấn để xuất báo cáo</small>
                    </div>
                    <div class="col-auto">
                        <i class="fas fa-calendar-alt fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-xl-3 col-md-6 mb-4">
        <div class="card border-left-info shadow h-100 py-2 report-card"
            onclick="generateQuickReport('inventory-status')">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-info text-uppercase mb-1">
                            Tình trạng kho
                        </div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.LowStockItems</div>
                        <small class="text-muted">Nhấn để xuất báo cáo</small>
                    </div>
                    <div class="col-auto">
                        <i class="fas fa-boxes fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-xl-3 col-md-6 mb-4">
        <div class="card border-left-warning shadow h-100 py-2 report-card"
            onclick="generateQuickReport('customer-analysis')">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-warning text-uppercase mb-1">
                            Phân tích KH
                        </div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.NewCustomersThisMonth</div>
                        <small class="text-muted">Nhấn để xuất báo cáo</small>
                    </div>
                    <div class="col-auto">
                        <i class="fas fa-users fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Recent Reports -->
<div class="card shadow mb-4">
    <div class="card-header py-3">
        <h6 class="m-0 font-weight-bold text-primary">Báo cáo gần đây</h6>
    </div>
    <div class="card-body">
        @if (Model.RecentReports?.Any() == true)
        {
            <div class="table-responsive">
                <table class="table table-bordered" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th>Tên báo cáo</th>
                            <th>Loại</th>
                            <th>Thời gian tạo</th>
                            <th>Kích thước</th>
                            <th>Trạng thái</th>
                            <th>Thao tác</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var report in Model.RecentReports)
                        {
                            <tr>
                                <td>@report.Name</td>
                                <td>
                                    <span class="badge bg-info">@report.Type</span>
                                </td>
                                <td>@report.CreatedDate.ToString("dd/MM/yyyy HH:mm")</td>
                                <td>@report.FileSize</td>
                                <td>
                                    <span
                                        class="badge bg-@(report.Status == "Completed" ? "success" : report.Status == "Processing" ? "warning" : "danger")">
                                        @report.Status
                                    </span>
                                </td>
                                <td>
                                    @if (report.Status == "Completed")
                                    {
                                        <a href="@report.DownloadUrl" class="btn btn-success btn-sm" title="Tải xuống">
                                            <i class="fas fa-download"></i>
                                        </a>
                                    }
                                    <button type="button" class="btn btn-danger btn-sm" title="Xóa"
                                        onclick="deleteReport('@report.Id')">
                                        <i class="fas fa-trash"></i>
                                    </button>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="text-center py-5">
                <i class="fas fa-file-alt fa-3x text-muted mb-3"></i>
                <h5>Chưa có báo cáo nào</h5>
                <p class="text-muted">Tạo báo cáo đầu tiên để bắt đầu</p>
            </div>
        }
    </div>
</div>

<!-- Scheduled Reports -->
<div class="card shadow mb-4">
    <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
        <h6 class="m-0 font-weight-bold text-primary">Báo cáo định kỳ</h6>
        <button type="button" class="btn btn-primary btn-sm" data-bs-toggle="modal"
            data-bs-target="#scheduleReportModal">
            <i class="fas fa-plus me-1"></i>
            Thêm lịch báo cáo
        </button>
    </div>
    <div class="card-body">
        @if (Model.ScheduledReports?.Any() == true)
        {
            <div class="table-responsive">
                <table class="table table-bordered" width="100%" cellspacing="0">
                    <thead>
                        <tr>
                            <th>Tên báo cáo</th>
                            <th>Loại</th>
                            <th>Lịch chạy</th>
                            <th>Lần cuối chạy</th>
                            <th>Lần tiếp theo</th>
                            <th>Trạng thái</th>
                            <th>Thao tác</th>
                        </tr>
                    </thead>
                    <tbody>
                        @foreach (var schedule in Model.ScheduledReports)
                        {
                            <tr>
                                <td>@schedule.Name</td>
                                <td>
                                    <span class="badge bg-info">@schedule.ReportType</span>
                                </td>
                                <td>@schedule.ScheduleDescription</td>
                                <td>
                                    @if (schedule.LastRun.HasValue)
                                    {
                                        @schedule.LastRun.Value.ToString("dd/MM/yyyy HH:mm")
                                    }
                                    else
                                    {
                                        <span class="text-muted">Chưa chạy</span>
                                    }
                                </td>
                                <td>@schedule.NextRun.ToString("dd/MM/yyyy HH:mm")</td>
                                <td>
                                    <span class="badge bg-@(schedule.IsActive ? "success" : "secondary")">
                                        @(schedule.IsActive ? "Hoạt động" : "Tạm dừng")
                                    </span>
                                </td>
                                <td>
                                    <div class="btn-group" role="group">
                                        <button type="button" class="btn btn-warning btn-sm" title="Chỉnh sửa"
                                            onclick="editSchedule(@schedule.Id)">
                                            <i class="fas fa-edit"></i>
                                        </button>
                                        <button type="button"
                                            class="btn btn-@(schedule.IsActive ? "secondary" : "success") btn-sm"
                                            title="@(schedule.IsActive ? "Tạm dừng" : "Kích hoạt")"
                                            onclick="toggleSchedule(@schedule.Id, @schedule.IsActive.ToString().ToLower())">
                                            <i class="fas fa-@(schedule.IsActive ? "pause" : "play")"></i>
                                        </button>
                                        <button type="button" class="btn btn-danger btn-sm" title="Xóa"
                                            onclick="deleteSchedule(@schedule.Id)">
                                            <i class="fas fa-trash"></i>
                                        </button>
                                    </div>
                                </td>
                            </tr>
                        }
                    </tbody>
                </table>
            </div>
        }
        else
        {
            <div class="text-center py-5">
                <i class="fas fa-calendar-times fa-3x text-muted mb-3"></i>
                <h5>Chưa có lịch báo cáo nào</h5>
                <p class="text-muted">Tạo lịch báo cáo định kỳ để tự động nhận báo cáo</p>
            </div>
        }
    </div>
</div>

<!-- Schedule Report Modal -->
<div class="modal fade" id="scheduleReportModal" tabindex="-1">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title">Tạo lịch báo cáo định kỳ</h5>
                <button type="button" class="btn-close" data-bs-dismiss="modal"></button>
            </div>
            <form id="scheduleReportForm">
                <div class="modal-body">
                    <div class="mb-3">
                        <label class="form-label">Tên báo cáo *</label>
                        <input type="text" name="Name" class="form-control" required />
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Loại báo cáo *</label>
                        <select name="ReportType" class="form-select" required>
                            <option value="">Chọn loại báo cáo</option>
                            <option value="sales">Doanh số bán hàng</option>
                            <option value="inventory">Tồn kho</option>
                            <option value="customers">Khách hàng</option>
                            <option value="products">Sản phẩm</option>
                            <option value="financial">Tài chính</option>
                        </select>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Tần suất *</label>
                        <select name="Frequency" class="form-select" required>
                            <option value="daily">Hàng ngày</option>
                            <option value="weekly">Hàng tuần</option>
                            <option value="monthly">Hàng tháng</option>
                            <option value="quarterly">Hàng quý</option>
                        </select>
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Thời gian chạy *</label>
                        <input type="time" name="RunTime" class="form-control" value="08:00" required />
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Email nhận báo cáo</label>
                        <input type="email" name="EmailRecipients" class="form-control"
                            placeholder="Nhập email, cách nhau bằng dấu phẩy" />
                    </div>

                    <div class="mb-3">
                        <label class="form-label">Định dạng</label>
                        <select name="Format" class="form-select">
                            <option value="excel">Excel</option>
                            <option value="pdf">PDF</option>
                            <option value="csv">CSV</option>
                        </select>
                    </div>

                    <div class="mb-3 form-check">
                        <input type="checkbox" name="IsActive" class="form-check-input" checked />
                        <label class="form-check-label">Kích hoạt ngay</label>
                    </div>
                </div>
                <div class="modal-footer">
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Hủy</button>
                    <button type="submit" class="btn btn-primary">Tạo lịch báo cáo</button>
                </div>
            </form>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        // Set default dates
        var today = new Date();
        var firstDay = new Date(today.getFullYear(), today.getMonth(), 1);

        document.querySelector('input[name="fromDate"]').value = firstDay.toISOString().split('T')[0];
        document.querySelector('input[name="toDate"]').value = today.toISOString().split('T')[0];

        // Report form submission
        document.getElementById('reportForm').addEventListener('submit', function (e) {
            e.preventDefault();

            var formData = new FormData(this);
            var params = new URLSearchParams(formData);

            // Show loading
            var button = this.querySelector('button[type="submit"]');
            var originalText = button.innerHTML;
            button.innerHTML = '<i class="fas fa-spinner fa-spin me-1"></i> Đang tạo...';
            button.disabled = true;

            fetch('@Url.Action("GenerateReport", "Admin")', {
                method: 'POST',
                body: formData
            })
                .then(response => {
                    if (response.ok) {
                        return response.blob();
                    } else {
                        throw new Error('Có lỗi xảy ra khi tạo báo cáo');
                    }
                })
                .then(blob => {
                    // Download file
                    var url = window.URL.createObjectURL(blob);
                    var a = document.createElement('a');
                    a.style.display = 'none';
                    a.href = url;
                    a.download = 'report-' + new Date().toISOString().split('T')[0] + '.' + formData.get('format');
                    document.body.appendChild(a);
                    a.click();
                    window.URL.revokeObjectURL(url);
                    document.body.removeChild(a);

                    // Show success message
                    showAlert('Báo cáo đã được tạo và tải xuống thành công!', 'success');
                })
                .catch(error => {
                    showAlert(error.message, 'danger');
                })
                .finally(() => {
                    // Reset button
                    button.innerHTML = originalText;
                    button.disabled = false;
                });
        });

        // Quick report generation
        function generateQuickReport(reportType) {
            var url = '@Url.Action("GenerateQuickReport", "Admin")/' + reportType;
            window.open(url, '_blank');
        }

        // Schedule report form submission
        document.getElementById('scheduleReportForm').addEventListener('submit', function (e) {
            e.preventDefault();

            var formData = new FormData(this);

            fetch('@Url.Action("CreateSchedule", "Admin")', {
                method: 'POST',
                body: formData
            })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        location.reload();
                    } else {
                        showAlert('Có lỗi xảy ra: ' + data.message, 'danger');
                    }
                })
                .catch(error => {
                    showAlert('Có lỗi xảy ra khi tạo lịch báo cáo', 'danger');
                });
        });

        function deleteReport(reportId) {
            if (confirm('Bạn có chắc muốn xóa báo cáo này?')) {
                fetch('@Url.Action("DeleteReport", "Admin")/' + reportId, {
                    method: 'DELETE'
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            location.reload();
                        } else {
                            showAlert('Có lỗi xảy ra: ' + data.message, 'danger');
                        }
                    })
                    .catch(error => {
                        showAlert('Có lỗi xảy ra khi xóa báo cáo', 'danger');
                    });
            }
        }

        function toggleSchedule(scheduleId, isActive) {
            var action = isActive ? 'tạm dừng' : 'kích hoạt';
            if (confirm('Bạn có chắc muốn ' + action + ' lịch báo cáo này?')) {
                fetch('@Url.Action("ToggleSchedule", "Admin")', {
                    method: 'POST',
                    headers: {
                        'Content-Type': 'application/json'
                    },
                    body: JSON.stringify({ id: scheduleId, isActive: !isActive })
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            location.reload();
                        } else {
                            showAlert('Có lỗi xảy ra: ' + data.message, 'danger');
                        }
                    })
                    .catch(error => {
                        showAlert('Có lỗi xảy ra khi cập nhật lịch báo cáo', 'danger');
                    });
            }
        }

        function deleteSchedule(scheduleId) {
            if (confirm('Bạn có chắc muốn xóa lịch báo cáo này?')) {
                fetch('@Url.Action("DeleteSchedule", "Admin")/' + scheduleId, {
                    method: 'DELETE'
                })
                    .then(response => response.json())
                    .then(data => {
                        if (data.success) {
                            location.reload();
                        } else {
                            showAlert('Có lỗi xảy ra: ' + data.message, 'danger');
                        }
                    })
                    .catch(error => {
                        showAlert('Có lỗi xảy ra khi xóa lịch báo cáo', 'danger');
                    });
            }
        }

        function editSchedule(scheduleId) {
            // Implementation for editing schedule
            // This would load the schedule data into the modal for editing
        }

        function showAlert(message, type) {
            var alert = document.createElement('div');
            alert.className = 'alert alert-' + type + ' alert-dismissible fade show position-fixed';
            alert.style.top = '20px';
            alert.style.right = '20px';
            alert.style.zIndex = '9999';
            alert.innerHTML = message + '<button type="button" class="btn-close" data-bs-dismiss="alert"></button>';
            document.body.appendChild(alert);

            setTimeout(() => {
                if (alert.parentNode) {
                    alert.parentNode.removeChild(alert);
                }
            }, 5000);
        }

        // Add hover effect for report cards
        document.querySelectorAll('.report-card').forEach(card => {
            card.style.cursor = 'pointer';
            card.addEventListener('mouseenter', function () {
                this.style.transform = 'translateY(-5px)';
                this.style.transition = 'transform 0.2s ease';
            });
            card.addEventListener('mouseleave', function () {
                this.style.transform = 'translateY(0)';
            });
        });
    </script>
}

<style>
    .report-card {
        transition: transform 0.2s ease;
    }

    .report-card:hover {
        transform: translateY(-5px);
        cursor: pointer;
    }
</style> *@