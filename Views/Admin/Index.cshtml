@model BookStoreMVC.Models.ViewModels.AdminDashboardViewModel

@{
    ViewData["Title"] = "Admin Dashboard";
    Layout = "_AdminLayout"; // Giả sử có layout riêng cho admin
}

@section Styles {
    <style>
        .dashboard-card {
            transition: all 0.3s ease;
        }

        .dashboard-card:hover {
            transform: translateY(-4px);
            box-shadow: 0 8px 25px rgba(0, 0, 0, 0.1);
        }

        .stat-icon {
            width: 3rem;
            height: 3rem;
            border-radius: 50%;
            display: flex;
            align-items: center;
            justify-content: center;
            font-size: 1.25rem;
        }

        .chart-container {
            position: relative;
            height: 300px;
        }

        .gradient-bg {
            background: linear-gradient(135deg, #667eea 0%, #764ba2 100%);
        }
    </style>
}

<div class="max-w-7xl mx-auto space-y-8">
    <!-- Welcome Header -->
    <div class="gradient-bg text-white p-6 rounded-lg shadow-lg">
        <div class="flex justify-between items-center">
            <div>
                <h1 class="text-3xl font-bold mb-2">Chào mừng trở lại, Admin!</h1>
                <p class="text-lg opacity-90">Tổng quan hoạt động hệ thống BookStore</p>
            </div>
            <div class="text-right">
                <div class="text-2xl font-bold">@DateTime.Now.ToString("dd/MM/yyyy")</div>
                <div class="opacity-80">@DateTime.Now.ToString("dddd, HH:mm")</div>
            </div>
        </div>
    </div>

    <!-- Key Statistics -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
        <!-- Total Users -->
        <div class="dashboard-card bg-white p-6 rounded-lg shadow-md">
            <div class="flex items-center justify-between">
                <div>
                    <p class="text-gray-600 text-sm font-medium">Tổng người dùng</p>
                    <p class="text-3xl font-bold text-gray-800">@Model.TotalUsers.ToString("N0")</p>
                    <p class="text-green-600 text-sm mt-1">
                        <i class="fas fa-arrow-up mr-1"></i>
                        +12% so với tháng trước
                    </p>
                </div>
                <div class="stat-icon bg-blue-100 text-blue-600">
                    <i class="fas fa-users"></i>
                </div>
            </div>
        </div>

        <!-- Total Books -->
        <div class="dashboard-card bg-white p-6 rounded-lg shadow-md">
            <div class="flex items-center justify-between">
                <div>
                    <p class="text-gray-600 text-sm font-medium">Tổng sách</p>
                    <p class="text-3xl font-bold text-gray-800">@Model.TotalBooks.ToString("N0")</p>
                    <p class="text-blue-600 text-sm mt-1">
                        <i class="fas fa-arrow-up mr-1"></i>
                        +5% so với tháng trước
                    </p>
                </div>
                <div class="stat-icon bg-green-100 text-green-600">
                    <i class="fas fa-book"></i>
                </div>
            </div>
        </div>

        <!-- Total Orders -->
        <div class="dashboard-card bg-white p-6 rounded-lg shadow-md">
            <div class="flex items-center justify-between">
                <div>
                    <p class="text-gray-600 text-sm font-medium">Tổng đơn hàng</p>
                    <p class="text-3xl font-bold text-gray-800">@Model.TotalOrders.ToString("N0")</p>
                    <p class="text-orange-600 text-sm mt-1">
                        <i class="fas fa-arrow-up mr-1"></i>
                        +18% so với tháng trước
                    </p>
                </div>
                <div class="stat-icon bg-orange-100 text-orange-600">
                    <i class="fas fa-shopping-bag"></i>
                </div>
            </div>
        </div>

        <!-- Total Revenue -->
        <div class="dashboard-card bg-white p-6 rounded-lg shadow-md">
            <div class="flex items-center justify-between">
                <div>
                    <p class="text-gray-600 text-sm font-medium">Tổng doanh thu</p>
                    <p class="text-3xl font-bold text-gray-800">@Model.TotalRevenue.ToString("C0")</p>
                    <p class="text-green-600 text-sm mt-1">
                        <i class="fas fa-arrow-up mr-1"></i>
                        +25% so với tháng trước
                    </p>
                </div>
                <div class="stat-icon bg-purple-100 text-purple-600">
                    <i class="fas fa-chart-line"></i>
                </div>
            </div>
        </div>
    </div>

    <!-- Status Overview -->
    <div class="grid grid-cols-1 md:grid-cols-2 lg:grid-cols-4 gap-6">
        <!-- Pending Orders -->
        <div class="dashboard-card bg-yellow-50 border border-yellow-200 p-6 rounded-lg">
            <div class="flex items-center justify-between">
                <div>
                    <p class="text-yellow-800 text-sm font-medium">Đơn hàng chờ xử lý</p>
                    <p class="text-2xl font-bold text-yellow-900">@Model.PendingOrders</p>
                </div>
                <div class="stat-icon bg-yellow-200 text-yellow-700">
                    <i class="fas fa-clock"></i>
                </div>
            </div>
        </div>

        <!-- Low Stock Books -->
        <div class="dashboard-card bg-red-50 border border-red-200 p-6 rounded-lg">
            <div class="flex items-center justify-between">
                <div>
                    <p class="text-red-800 text-sm font-medium">Sách sắp hết</p>
                    <p class="text-2xl font-bold text-red-900">@Model.LowStockBooks</p>
                </div>
                <div class="stat-icon bg-red-200 text-red-700">
                    <i class="fas fa-exclamation-triangle"></i>
                </div>
            </div>
        </div>

        <!-- Unapproved Reviews -->
        <div class="dashboard-card bg-blue-50 border border-blue-200 p-6 rounded-lg">
            <div class="flex items-center justify-between">
                <div>
                    <p class="text-blue-800 text-sm font-medium">Đánh giá chờ duyệt</p>
                    <p class="text-2xl font-bold text-blue-900">@Model.UnapprovedReviews</p>
                </div>
                <div class="stat-icon bg-blue-200 text-blue-700">
                    <i class="fas fa-star-half-alt"></i>
                </div>
            </div>
        </div>

        <!-- Total Categories -->
        <div class="dashboard-card bg-green-50 border border-green-200 p-6 rounded-lg">
            <div class="flex items-center justify-between">
                <div>
                    <p class="text-green-800 text-sm font-medium">Danh mục sách</p>
                    <p class="text-2xl font-bold text-green-900">@Model.TotalCategories</p>
                </div>
                <div class="stat-icon bg-green-200 text-green-700">
                    <i class="fas fa-tags"></i>
                </div>
            </div>
        </div>
    </div>

    <!-- Charts Section -->
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
        <!-- Revenue Chart -->
        <div class="bg-white p-6 rounded-lg shadow-md">
            <div class="flex justify-between items-center mb-4">
                <h3 class="text-xl font-bold text-gray-800">Doanh thu 12 tháng gần đây</h3>
                <select id="revenueFilter"
                    class="px-3 py-2 border border-gray-300 rounded-lg text-sm focus:ring-2 focus:ring-blue-500">
                    <option value="12">12 tháng</option>
                    <option value="6">6 tháng</option>
                    <option value="3">3 tháng</option>
                </select>
            </div>
            <div class="chart-container">
                <canvas id="revenueChart"></canvas>
            </div>
        </div>

        <!-- Orders by Status -->
        <div class="bg-white p-6 rounded-lg shadow-md">
            <div class="flex justify-between items-center mb-4">
                <h3 class="text-xl font-bold text-gray-800">Trạng thái đơn hàng</h3>
                <button onclick="refreshOrderStatus()" class="text-blue-600 hover:text-blue-800 text-sm font-medium">
                    <i class="fas fa-sync-alt mr-1"></i>
                    Làm mới
                </button>
            </div>
            <div class="chart-container">
                <canvas id="orderStatusChart"></canvas>
            </div>
        </div>
    </div>

    <!-- Recent Activity & Quick Actions -->
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
        <!-- Recent Orders -->
        <div class="bg-white p-6 rounded-lg shadow-md">
            <h3 class="text-xl font-bold text-gray-800 mb-4">Đơn hàng gần đây</h3>
            <div class="space-y-3">
                @foreach (var order in Model.RecentOrders.Take(5))
                {
                    <div class="flex items-center justify-between p-3 bg-gray-50 rounded-lg">
                        <div class="flex items-center space-x-3">
                            <div
                                class="w-2 h-2 rounded-full @(order.Status == BookStoreMVC.Models.Entities.OrderStatus.Pending ? "bg-yellow-500" : 
                                                                                                order.Status == BookStoreMVC.Models.Entities.OrderStatus.Processing ? "bg-blue-500" : 
                                                                                                order.Status == BookStoreMVC.Models.Entities.OrderStatus.Shipped ? "bg-purple-500" : 
                                                                                                order.Status == BookStoreMVC.Models.Entities.OrderStatus.Delivered ? "bg-green-500" : "bg-red-500")">
                            </div>
                            <div>
                                <p class="font-semibold text-gray-800">#@order.OrderNumber</p>
                                <p class="text-gray-600 text-sm">@order.User.Name</p>
                            </div>
                        </div>
                        <div class="text-right">
                            <p class="font-bold text-gray-800">@order.Total.ToString("C0")</p>
                            <p class="text-gray-600 text-sm">@order.CreatedAt.ToString("dd/MM HH:mm")</p>
                        </div>
                    </div>
                }
            </div>
            <div class="mt-4 text-center">
                <a asp-action="Orders" class="text-blue-600 hover:text-blue-800 font-medium">
                    Xem tất cả đơn hàng <i class="fas fa-arrow-right ml-1"></i>
                </a>
            </div>
        </div>

        <!-- Quick Actions -->
        <div class="bg-white p-6 rounded-lg shadow-md">
            <h3 class="text-xl font-bold text-gray-800 mb-4">Thao tác nhanh</h3>
            <div class="grid grid-cols-2 gap-3">
                <a asp-action="CreateBook"
                    class="flex flex-col items-center p-4 bg-blue-50 hover:bg-blue-100 rounded-lg transition-colors">
                    <i class="fas fa-plus-circle text-2xl text-blue-600 mb-2"></i>
                    <span class="text-blue-800 font-medium text-sm">Thêm sách mới</span>
                </a>

                <a asp-action="Orders" asp-route-status="Pending"
                    class="flex flex-col items-center p-4 bg-yellow-50 hover:bg-yellow-100 rounded-lg transition-colors">
                    <i class="fas fa-clock text-2xl text-yellow-600 mb-2"></i>
                    <span class="text-yellow-800 font-medium text-sm">Xử lý đơn hàng</span>
                </a>

                <a asp-action="Users"
                    class="flex flex-col items-center p-4 bg-green-50 hover:bg-green-100 rounded-lg transition-colors">
                    <i class="fas fa-users text-2xl text-green-600 mb-2"></i>
                    <span class="text-green-800 font-medium text-sm">Quản lý user</span>
                </a>

                <a asp-action="Reports"
                    class="flex flex-col items-center p-4 bg-purple-50 hover:bg-purple-100 rounded-lg transition-colors">
                    <i class="fas fa-chart-bar text-2xl text-purple-600 mb-2"></i>
                    <span class="text-purple-800 font-medium text-sm">Báo cáo</span>
                </a>
            </div>
        </div>
    </div>

    <!-- Low Stock Alert & New Users -->
    <div class="grid grid-cols-1 lg:grid-cols-2 gap-8">
        <!-- Low Stock Books -->
        @if (Model.LowStockItems?.Any() == true)
        {
            <div class="bg-white p-6 rounded-lg shadow-md">
                <h3 class="text-xl font-bold text-gray-800 mb-4 flex items-center">
                    <i class="fas fa-exclamation-triangle text-red-500 mr-2"></i>
                    Sách sắp hết hàng
                </h3>
                <div class="space-y-3">
                    @foreach (var book in Model.LowStockItems.Take(5))
                    {
                        <div class="flex items-center justify-between p-3 bg-red-50 border border-red-200 rounded-lg">
                            <div class="flex items-center space-x-3">
                                <img src="@(book.ImageUrl ?? "/images/no-book-cover.png")" alt="@book.Title"
                                    class="w-10 h-12 object-cover rounded" />
                                <div>
                                    <p class="font-semibold text-gray-800 line-clamp-1">@book.Title</p>
                                    <p class="text-gray-600 text-sm">@book.Author</p>
                                </div>
                            </div>
                            <div class="text-right">
                                <p class="font-bold text-red-600">@book.StockQuantity cuốn</p>
                                <a asp-action="EditBook" asp-route-id="@book.Id"
                                    class="text-blue-600 hover:text-blue-800 text-xs">
                                    Cập nhật kho
                                </a>
                            </div>
                        </div>
                    }
                </div>
            </div>
        }

        <!-- New Users -->
        @if (Model.NewUsers?.Any() == true)
        {
            <div class="bg-white p-6 rounded-lg shadow-md">
                <h3 class="text-xl font-bold text-gray-800 mb-4 flex items-center">
                    <i class="fas fa-user-plus text-green-500 mr-2"></i>
                    Người dùng mới
                </h3>
                <div class="space-y-3">
                    @foreach (var user in Model.NewUsers.Take(5))
                    {
                        <div class="flex items-center justify-between p-3 bg-green-50 border border-green-200 rounded-lg">
                            <div class="flex items-center space-x-3">
                                <div class="w-10 h-10 bg-green-500 rounded-full flex items-center justify-center">
                                    <i class="fas fa-user text-white"></i>
                                </div>
                                <div>
                                    <p class="font-semibold text-gray-800">@user.Name</p>
                                    <p class="text-gray-600 text-sm">@user.Email</p>
                                </div>
                            </div>
                            <div class="text-right">
                                <p class="text-gray-600 text-sm">@user.CreatedAt.ToString("dd/MM/yyyy")</p>
                                <a asp-action="UserDetails" asp-route-id="@user.Id"
                                    class="text-blue-600 hover:text-blue-800 text-xs">
                                    Xem chi tiết
                                </a>
                            </div>
                        </div>
                    }
                </div>
            </div>
        }
    </div>
</div>

@section Scripts {
    <!-- Chart.js -->
    <script src="https://cdn.jsdelivr.net/npm/chart.js"></script>

    <script>
        // Revenue Chart
        const revenueCtx = document.getElementById('revenueChart').getContext('2d');
        const revenueChart = new Chart(revenueCtx, {
            type: 'line',
            data: {
                labels: @Html.Raw(Json.Serialize(Model.MonthlyRevenue.Keys)),
                datasets: [{
                    label: 'Doanh thu (VND)',
                    data: @Html.Raw(Json.Serialize(Model.MonthlyRevenue.Values)),
                    borderColor: 'rgb(59, 130, 246)',
                    backgroundColor: 'rgba(59, 130, 246, 0.1)',
                    borderWidth: 2,
                    fill: true,
                    tension: 0.4
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                scales: {
                    y: {
                        beginAtZero: true,
                        ticks: {
                            callback: function (value) {
                                return new Intl.NumberFormat('vi-VN', {
                                    style: 'currency',
                                    currency: 'VND'
                                }).format(value);
                            }
                        }
                    }
                },
                plugins: {
                    tooltip: {
                        callbacks: {
                            label: function (context) {
                                return 'Doanh thu: ' + new Intl.NumberFormat('vi-VN', {
                                    style: 'currency',
                                    currency: 'VND'
                                }).format(context.parsed.y);
                            }
                        }
                    }
                }
            }
        });

        // Order Status Chart
        const orderStatusCtx = document.getElementById('orderStatusChart').getContext('2d');
        const orderStatusChart = new Chart(orderStatusCtx, {
            type: 'doughnut',
            data: {
                labels: @Html.Raw(Json.Serialize(Model.OrdersByStatus.Keys)),
                datasets: [{
                    data: @Html.Raw(Json.Serialize(Model.OrdersByStatus.Values)),
                    backgroundColor: [
                        '#fbbf24', // Pending - Yellow
                        '#3b82f6', // Processing - Blue
                        '#8b5cf6', // Shipped - Purple
                        '#10b981', // Delivered - Green
                        '#ef4444'  // Cancelled - Red
                    ],
                    borderWidth: 2,
                    borderColor: '#ffffff'
                }]
            },
            options: {
                responsive: true,
                maintainAspectRatio: false,
                plugins: {
                    legend: {
                        position: 'bottom'
                    },
                    tooltip: {
                        callbacks: {
                            label: function (context) {
                                const total = context.dataset.data.reduce((a, b) => a + b, 0);
                                const percentage = Math.round((context.parsed / total) * 100);
                                return context.label + ': ' + context.parsed + ' (' + percentage + '%)';
                            }
                        }
                    }
                }
            }
        });

        // Auto-refresh dashboard every 5 minutes
        setInterval(() => {
            location.reload();
        }, 300000);

        // Refresh order status chart
        function refreshOrderStatus() {
            fetch('/Admin/GetOrderStatusData')
                .then(response => response.json())
                .then(data => {
                    orderStatusChart.data.datasets[0].data = Object.values(data);
                    orderStatusChart.update();
                    showNotification('Đã cập nhật dữ liệu!', 'success');
                })
                .catch(error => {
                    console.error('Error:', error);
                    showNotification('Có lỗi xảy ra khi cập nhật dữ liệu!', 'error');
                });
        }

        function showNotification(message, type) {
            const notification = document.createElement('div');
            notification.className = `fixed top-4 right-4 px-6 py-3 rounded-lg text-white z-50 ${type === 'success' ? 'bg-green-500' :
                    type === 'error' ? 'bg-red-500' :
                        type === 'info' ? 'bg-blue-500' : 'bg-gray-500'
                }`;
            notification.textContent = message;

            document.body.appendChild(notification);

            setTimeout(() => {
                notification.remove();
            }, 3000);
        }

        // Real-time updates via SignalR (if implemented)
        // const connection = new signalR.HubConnectionBuilder()
        //     .withUrl("/dashboardHub")
        //     .build();
    </script>
}