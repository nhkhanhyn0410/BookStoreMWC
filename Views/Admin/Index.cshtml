@model AdminDashboardViewModel
@{
    ViewData["Title"] = "Dashboard";
    Layout = "_AdminLayout";
}

<div class="d-sm-flex align-items-center justify-content-between mb-4">
    <h1 class="h3 mb-0 text-gray-800">Dashboard</h1>
    <div class="d-none d-sm-inline-block">
        <span class="text-muted">Cập nhật: @DateTime.Now.ToString("dd/MM/yyyy HH:mm")</span>
    </div>
</div>

<!-- Statistics Cards -->
<div class="row mb-4">
    <div class="col-xl-3 col-md-6 mb-4">
        <div class="card border-left-primary shadow h-100 py-2">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-primary text-uppercase mb-1">
                            Doanh thu (Tháng)
                        </div>
                        @* <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.MonthlyRevenue.ToString("C")</div> *@
                    </div>
                    <div class="col-auto">
                        <i class="fas fa-dollar-sign fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-xl-3 col-md-6 mb-4">
        <div class="card border-left-success shadow h-100 py-2">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-success text-uppercase mb-1">
                            Đơn hàng (Hôm nay)
                        </div>
                        @* <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.TodayOrders</div> *@
                    </div>
                    <div class="col-auto">
                        <i class="fas fa-shopping-cart fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-xl-3 col-md-6 mb-4">
        <div class="card border-left-info shadow h-100 py-2">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-info text-uppercase mb-1">
                            Tổng sách
                        </div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.TotalBooks</div>
                    </div>
                    <div class="col-auto">
                        <i class="fas fa-book fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>

    <div class="col-xl-3 col-md-6 mb-4">
        <div class="card border-left-warning shadow h-100 py-2">
            <div class="card-body">
                <div class="row no-gutters align-items-center">
                    <div class="col mr-2">
                        <div class="text-xs font-weight-bold text-warning text-uppercase mb-1">
                            Người dùng
                        </div>
                        <div class="h5 mb-0 font-weight-bold text-gray-800">@Model.TotalUsers</div>
                    </div>
                    <div class="col-auto">
                        <i class="fas fa-users fa-2x text-gray-300"></i>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Charts Row -->
<div class="row">
    <!-- Revenue Chart -->
    <div class="col-xl-8 col-lg-7">
        <div class="card shadow mb-4">
            <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                <h6 class="m-0 font-weight-bold text-primary">Biểu đồ doanh thu</h6>
            </div>
            <div class="card-body">
                <div class="chart-area">
                    <canvas id="revenueChart"></canvas>
                </div>
            </div>
        </div>
    </div>

    <!-- Top Categories Chart -->
    <div class="col-xl-4 col-lg-5">
        <div class="card shadow mb-4">
            <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                <h6 class="m-0 font-weight-bold text-primary">Top danh mục</h6>
            </div>
            <div class="card-body">
                <div class="chart-pie pt-4 pb-2">
                    <canvas id="categoriesChart"></canvas>
                </div>
            </div>
        </div>
    </div>
</div>

<!-- Recent Orders and Quick Actions -->
<div class="row">
    <!-- Recent Orders -->
    <div class="col-xl-8 col-lg-7">
        <div class="card shadow mb-4">
            <div class="card-header py-3 d-flex flex-row align-items-center justify-content-between">
                <h6 class="m-0 font-weight-bold text-primary">Đơn hàng gần đây</h6>
                <a asp-action="ManageOrders" class="btn btn-primary btn-sm">Xem tất cả</a>
            </div>
            <div class="card-body">
                <div class="table-responsive">
                    <table class="table table-bordered" width="100%" cellspacing="0">
                        <thead>
                            <tr>
                                <th>Mã đơn</th>
                                <th>Khách hàng</th>
                                <th>Tổng tiền</th>
                                <th>Trạng thái</th>
                                <th>Ngày đặt</th>
                            </tr>
                        </thead>
                        <tbody>
                            @if (Model.RecentOrders?.Any() == true)
                            {
                                @foreach (var order in Model.RecentOrders)
                                {
                                    <tr>
                                        @* <td>#@order.OrderId</td>
                                        <td>@order.CustomerName</td>
                                        <td>@order.Total.ToString("C")</td>
                                        <td><span class="badge badge-@order.StatusColor">@order.Status</span></td>
                                        <td>@order.OrderDate.ToString("dd/MM/yyyy")</td> *@
                                    </tr>
                                }
                            }
                            else
                            {
                                <tr>
                                    <td colspan="5" class="text-center">Không có đơn hàng nào</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>
        </div>
    </div>

    <!-- Quick Actions -->
    <div class="col-xl-4 col-lg-5">
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Thao tác nhanh</h6>
            </div>
            <div class="card-body">
                <div class="d-grid gap-2">
                    <a asp-controller="Books" asp-action="Create" class="btn btn-primary">
                        <i class="fas fa-plus me-1"></i>
                        Thêm sách mới
                    </a>
                    <a asp-action="ManageOrders" class="btn btn-success">
                        <i class="fas fa-shopping-cart me-1"></i>
                        Quản lý đơn hàng
                    </a>
                    <a asp-action="ManageUsers" class="btn btn-info">
                        <i class="fas fa-users me-1"></i>
                        Quản lý người dùng
                    </a>
                    <a asp-action="Statistics" class="btn btn-warning">
                        <i class="fas fa-chart-bar me-1"></i>
                        Xem thống kê
                    </a>
                    <a asp-action="Reports" class="btn btn-secondary">
                        <i class="fas fa-file-alt me-1"></i>
                        Tạo báo cáo
                    </a>
                </div>
            </div>
        </div>

        <!-- System Status -->
        <div class="card shadow mb-4">
            <div class="card-header py-3">
                <h6 class="m-0 font-weight-bold text-primary">Trạng thái hệ thống</h6>
            </div>
            <div class="card-body">
                <div class="d-flex justify-content-between mb-2">
                    <span>Sách hết hàng:</span>
                    @* <strong class="text-danger">@Model.OutOfStockBooks</strong> *@
                </div>
                <div class="d-flex justify-content-between mb-2">
                    <span>Đơn hàng chờ xử lý:</span>
                    <strong class="text-warning">@Model.PendingOrders</strong>
                </div>
                <div class="d-flex justify-content-between mb-2">
                    <span>Đánh giá chờ duyệt:</span>
                    @* <strong class="text-info">@Model.PendingReviews</strong> *@
                </div>
                <div class="d-flex justify-content-between">
                    <span>Người dùng mới (tuần):</span>
                    @* <strong class="text-success">@Model.NewUsersThisWeek</strong> *@
                </div>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script src="~/lib/chartjs/chart.min.js"></script>
    <script>
        // Revenue Chart
        var ctx = document.getElementById("revenueChart");
        var revenueChart = new Chart(ctx, {
            type: 'line',
            data: {
                    @* labels: @Html.Raw(Json.Serialize(Model.RevenueChartLabels)), *@
            datasets: [{
                label: "Doanh thu",
                lineTension: 0.3,
                backgroundColor: "rgba(78, 115, 223, 0.05)",
                borderColor: "rgba(78, 115, 223, 1)",
                pointRadius: 3,
                pointBackgroundColor: "rgba(78, 115, 223, 1)",
                pointBorderColor: "rgba(78, 115, 223, 1)",
                pointHoverRadius: 3,
                pointHoverBackgroundColor: "rgba(78, 115, 223, 1)",
                pointHoverBorderColor: "rgba(78, 115, 223, 1)",
                pointHitRadius: 10,
                pointBorderWidth: 2,
                        @* data: @Html.Raw(Json.Serialize(Model.RevenueChartData)), *@
                    }],
                },
        options: {
            maintainAspectRatio: false,
                layout: {
                padding: {
                    left: 10,
                        right: 25,
                            top: 25,
                                bottom: 0
                }
            },
            scales: {
                xAxes: [{
                    time: {
                        unit: 'date'
                    },
                    gridLines: {
                        display: false,
                        drawBorder: false
                    },
                    ticks: {
                        maxTicksLimit: 7
                    }
                }],
                    yAxes: [{
                        ticks: {
                            maxTicksLimit: 5,
                            padding: 10,
                            callback: function (value, index, values) {
                                return number_format(value) + ' VNĐ';
                            }
                        },
                        gridLines: {
                            color: "rgb(234, 236, 244)",
                            zeroLineColor: "rgb(234, 236, 244)",
                            drawBorder: false,
                            borderDash: [2],
                            zeroLineBorderDash: [2]
                        }
                    }],
                    },
            legend: {
                display: false
            },
            tooltips: {
                backgroundColor: "rgb(255,255,255)",
                    bodyFontColor: "#858796",
                        titleMarginBottom: 10,
                            titleFontColor: '#6e707e',
                                titleFontSize: 14,
                                    borderColor: '#dddfeb',
                                        borderWidth: 1,
                                            xPadding: 15,
                                                yPadding: 15,
                                                    displayColors: false,
                                                        intersect: false,
                                                            mode: 'index',
                                                                caretPadding: 10,
                                                                    callbacks: {
                    label: function(tooltipItem, chart) {
                        var datasetLabel = chart.datasets[tooltipItem.datasetIndex].label || '';
                        return datasetLabel + ': ' + number_format(tooltipItem.yLabel) + ' VNĐ';
                    }
                }
            }
        }
            });

        // Categories Chart
        var ctx2 = document.getElementById("categoriesChart");
        var categoriesChart = new Chart(ctx2, {
            type: 'doughnut',
            data: {
                    @* labels: @Html.Raw(Json.Serialize(Model.CategoryChartLabels)), *@
            datasets: [{
                        @* data: @Html.Raw(Json.Serialize(Model.CategoryChartData)), *@
            backgroundColor: ['#4e73df', '#1cc88a', '#36b9cc', '#f6c23e', '#e74a3b'],
            hoverBackgroundColor: ['#2e59d9', '#17a673', '#2c9faf', '#f4b619', '#e02d1b'],
            hoverBorderColor: "rgba(234, 236, 244, 1)",
                    }],
                },
        options: {
            maintainAspectRatio: false,
                tooltips: {
                backgroundColor: "rgb(255,255,255)",
                    bodyFontColor: "#858796",
                        borderColor: '#dddfeb',
                            borderWidth: 1,
                                xPadding: 15,
                                    yPadding: 15,
                                        displayColors: false,
                                            caretPadding: 10,
                    },
            legend: {
                display: false
            },
            cutoutPercentage: 80,
                },
            });

        function number_format(number, decimals, dec_point, thousands_sep) {
            number = (number + '').replace(',', '').replace(' ', '');
            var n = !isFinite(+number) ? 0 : +number,
                prec = !isFinite(+decimals) ? 0 : Math.abs(decimals),
                sep = (typeof thousands_sep === 'undefined') ? ',' : thousands_sep,
                dec = (typeof dec_point === 'undefined') ? '.' : dec_point,
                s = '',
                toFixedFix = function (n, prec) {
                    var k = Math.pow(10, prec);
                    return '' + Math.round(n * k) / k;
                };
            s = (prec ? toFixedFix(n, prec) : '' + Math.round(n)).split('.');
            if (s[0].length > 3) {
                s[0] = s[0].replace(/\B(?=(?:\d{3})+(?!\d))/g, sep);
            }
            if ((s[1] || '').length < prec) {
                s[1] = s[1] || '';
                s[1] += new Array(prec - s[1].length + 1).join('0');
            }
            return s.join(dec);
        }
    </script>
}