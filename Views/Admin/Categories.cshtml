@* Views/Admin/Categories.cshtml *@
@model BookStoreMVC.Models.ViewModels.CategoryListViewModel
@{
    Layout = "_AdminLayout";
    ViewData["Title"] = "Quản lý danh mục";
    ViewBag.PageTitle = "Quản lý danh mục";
    ViewBag.ActiveMenu = "Categories";
}

<!-- Page Header with Actions -->
<div class="mb-6">
    <div class="sm:flex sm:items-center sm:justify-between">
        <div>
            <h2 class="text-2xl font-bold text-gray-900 mb-2">
                <i class="fas fa-tags text-primary-600 mr-3"></i>
                Quản lý danh mục
            </h2>
            <p class="text-sm text-gray-600">
                Tổng cộng: <span class="font-semibold text-primary-600">@(Model?.Categories?.Count() ?? 0)</span> danh mục
            </p>
        </div>
        <div class="mt-4 sm:mt-0 flex gap-3">
            <button type="button" onclick="exportCategories()" 
                    class="inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-lg text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 transition-colors">
                <i class="fas fa-download mr-2"></i>
                Xuất dữ liệu
            </button>
            <a href="@Url.Action("CreateCategory", "Admin", new { area = "Admin" })" 
               class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-lg text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 transition-colors shadow-sm">
                <i class="fas fa-plus mr-2"></i>
                Thêm danh mục mới
            </a>
        </div>
    </div>
</div>

<!-- Quick Stats -->
<div class="grid grid-cols-1 md:grid-cols-4 gap-6 mb-6">
    <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
        <div class="flex items-center">
            <div class="p-3 rounded-full bg-blue-100 text-blue-600">
                <i class="fas fa-tags text-xl"></i>
            </div>
            <div class="ml-4">
                <p class="text-sm font-medium text-gray-600">Tổng danh mục</p>
                <p class="text-2xl font-bold text-gray-900">@(Model?.Categories?.Count() ?? 0)</p>
            </div>
        </div>
    </div>
    <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
        <div class="flex items-center">
            <div class="p-3 rounded-full bg-green-100 text-green-600">
                <i class="fas fa-eye text-xl"></i>
            </div>
            <div class="ml-4">
                <p class="text-sm font-medium text-gray-600">Hiển thị</p>
                <p class="text-2xl font-bold text-gray-900">@(ViewBag.ActiveCategoriesCount ?? 0)</p>
            </div>
        </div>
    </div>
    <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
        <div class="flex items-center">
            <div class="p-3 rounded-full bg-yellow-100 text-yellow-600">
                <i class="fas fa-book text-xl"></i>
            </div>
            <div class="ml-4">
                <p class="text-sm font-medium text-gray-600">Có sách</p>
                <p class="text-2xl font-bold text-gray-900">@(ViewBag.CategoriesWithBooksCount ?? 0)</p>
            </div>
        </div>
    </div>
    <div class="bg-white rounded-lg shadow-sm border border-gray-200 p-6">
        <div class="flex items-center">
            <div class="p-3 rounded-full bg-purple-100 text-purple-600">
                <i class="fas fa-sitemap text-xl"></i>
            </div>
            <div class="ml-4">
                <p class="text-sm font-medium text-gray-600">Danh mục cha</p>
                <p class="text-2xl font-bold text-gray-900">@(ViewBag.ParentCategoriesCount ?? 0)</p>
            </div>
        </div>
    </div>
</div>

<!-- Search and Filter Section -->
<div class="bg-white rounded-lg shadow-sm border border-gray-200 mb-6">
    <div class="p-6">
        <form method="get" id="search-form" class="space-y-4">
            <div class="grid grid-cols-1 md:grid-cols-5 gap-4">
                <!-- Search Input -->
                <div class="md:col-span-2">
                    <label for="SearchTerm" class="block text-sm font-medium text-gray-700 mb-1">
                        <i class="fas fa-search mr-1"></i>Tìm kiếm
                    </label>
                    <div class="relative">
                        <input type="text" id="SearchTerm" name="SearchTerm" value="@Model.SearchTerm"
                               placeholder="Tên danh mục, mô tả..."
                               class="block w-full pl-10 pr-4 py-2.5 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 transition-colors">
                        <div class="absolute inset-y-0 left-0 pl-3 flex items-center pointer-events-none">
                            <i class="fas fa-search text-gray-400 text-sm"></i>
                        </div>
                    </div>
                </div>

                <!-- Parent Category Filter -->
                <div>
                    <label for="ParentCategoryId" class="block text-sm font-medium text-gray-700 mb-1">
                        <i class="fas fa-sitemap mr-1"></i>Danh mục cha
                    </label>
                    <select id="ParentCategoryId" name="ParentCategoryId" 
                            class="block w-full px-3 py-2.5 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 transition-colors">
                        <option value="">Tất cả</option>
                        @* <option value="0" @(Model.ParentCategoryId == 0 ? "selected" : "")>Danh mục gốc</option>
                        @if (Model?.ParentCategories != null)
                        {
                            @foreach (var parent in Model.ParentCategories)
                            {
                                <option value="@parent.Id" @(Model.ParentCategoryId == parent.Id ? "selected" : "")>
                                    @parent.Name
                                </option>
                            }
                        } *@
                    </select>
                </div>

                <!-- Status Filter -->
                <div>
                    <label for="IsActive" class="block text-sm font-medium text-gray-700 mb-1">
                        <i class="fas fa-toggle-on mr-1"></i>Trạng thái
                    </label>
                    @* <select id="IsActive" name="IsActive" 
                            class="block w-full px-3 py-2.5 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 transition-colors">
                        <option value="">Tất cả</option>
                        <option value="true" @(Model.IsActive == true ? "selected" : "")>Hiển thị</option>
                        <option value="false" @(Model.IsActive == false ? "selected" : "")>Ẩn</option>
                    </select> *@
                </div>

                <!-- Sort By -->
                <div>
                    <label for="SortBy" class="block text-sm font-medium text-gray-700 mb-1">
                        <i class="fas fa-sort mr-1"></i>Sắp xếp
                    </label>
                    @* <select id="SortBy" name="SortBy" 
                            class="block w-full px-3 py-2.5 border border-gray-300 rounded-lg focus:ring-2 focus:ring-primary-500 focus:border-primary-500 transition-colors">
                        <option value="name" @(Model.SortBy == "name" ? "selected" : "")>Tên A-Z</option>
                        <option value="name_desc" @(Model.SortBy == "name_desc" ? "selected" : "")>Tên Z-A</option>
                        <option value="books_count" @(Model.SortBy == "books_count" ? "selected" : "")>Số sách tăng</option>
                        <option value="books_count_desc" @(Model.SortBy == "books_count_desc" ? "selected" : "")>Số sách giảm</option>
                        <option value="created" @(Model.SortBy == "created" ? "selected" : "")>Mới nhất</option>
                        <option value="created_desc" @(Model.SortBy == "created_desc" ? "selected" : "")>Cũ nhất</option>
                        <option value="order" @(Model.SortBy == "order" ? "selected" : "")>Thứ tự hiển thị</option>
                    </select> *@
                </div>
            </div>

            <div class="flex items-center justify-between pt-4">
                <div class="flex items-center gap-4">
                    <button type="submit" 
                            class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-lg text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 transition-colors">
                        <i class="fas fa-search mr-2"></i>
                        Tìm kiếm
                    </button>
                    <a href="@Url.Action("Categories", "Admin")" 
                       class="inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-lg text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500 transition-colors">
                        <i class="fas fa-times mr-2"></i>
                        Xóa bộ lọc
                    </a>
                </div>
                <div class="flex items-center gap-2 text-sm text-gray-600">
                    <span>Hiển thị:</span>
                    @* <select name="PageSize" onchange="this.form.submit()" 
                            class="border border-gray-300 rounded px-2 py-1 text-sm focus:ring-2 focus:ring-primary-500 focus:border-primary-500">
                        <option value="10" @(Model.PageSize == 10 ? "selected" : "")>10</option>
                        <option value="25" @(Model.PageSize == 25 ? "selected" : "")>25</option>
                        <option value="50" @(Model.PageSize == 50 ? "selected" : "")>50</option>
                        <option value="100" @(Model.PageSize == 100 ? "selected" : "")>100</option>
                    </select> *@
                </div>
            </div>
        </form>
    </div>
</div>

<!-- Categories Table -->
<div class="bg-white rounded-lg shadow-sm border border-gray-200 overflow-hidden">
    @if (Model?.Categories != null && Model.Categories.Any())
    {
        <!-- Table Header -->
        <div class="px-6 py-4 bg-gray-50 border-b border-gray-200">
            <div class="flex items-center justify-between">
                <h3 class="text-lg font-semibold text-gray-900">Danh sách danh mục</h3>
                <div class="flex items-center gap-2">
                    <button type="button" id="bulk-action-btn" class="hidden inline-flex items-center px-3 py-2 border border-gray-300 text-sm font-medium rounded-lg text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500">
                        <i class="fas fa-cog mr-2"></i>
                        Thao tác hàng loạt
                    </button>
                    <div class="flex items-center">
                        <label class="inline-flex items-center">
                            <input type="checkbox" id="select-all" class="rounded border-gray-300 text-primary-600 focus:ring-primary-500">
                            <span class="ml-2 text-sm text-gray-600">Chọn tất cả</span>
                        </label>
                    </div>
                </div>
            </div>
        </div>

        <!-- Table Content -->
        <div class="overflow-x-auto">
            <table class="min-w-full divide-y divide-gray-200">
                <thead class="bg-gray-50">
                    <tr>
                        <th class="px-6 py-3 text-left">
                            <input type="checkbox" id="select-all-header" class="rounded border-gray-300 text-primary-600 focus:ring-primary-500">
                        </th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                            Danh mục
                        </th>
                        <th class="px-6 py-3 text-left text-xs font-medium text-gray-500 uppercase tracking-wider">
                            Danh mục cha
                        </th>
                        <th class="px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider">
                            Số sách
                        </th>
                        <th class="px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider">
                            Thứ tự
                        </th>
                        <th class="px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider">
                            Trạng thái
                        </th>
                        <th class="px-6 py-3 text-center text-xs font-medium text-gray-500 uppercase tracking-wider">
                            Thao tác
                        </th>
                    </tr>
                </thead>
                <tbody class="bg-white divide-y divide-gray-200">
                    @foreach (var category in Model.Categories)
                    {
                        <tr class="hover:bg-gray-50 transition-colors">
                            <td class="px-6 py-4">
                                <input type="checkbox" name="selectedCategories" value="@category.Id" class="category-checkbox rounded border-gray-300 text-primary-600 focus:ring-primary-500">
                            </td>
                            <td class="px-6 py-4">
                                <div class="flex items-center">
                                    @* @if (!string.IsNullOrEmpty(category.IconClass))
                                    {
                                        <div class="flex-shrink-0 h-10 w-10 mr-4">
                                            <div class="h-10 w-10 rounded-lg @GetCategoryColor(category.Id) flex items-center justify-center">
                                                <i class="@category.IconClass text-white text-lg"></i>
                                            </div>
                                        </div>
                                    }
                                    else
                                    {
                                        <div class="flex-shrink-0 h-10 w-10 mr-4">
                                            <div class="h-10 w-10 rounded-lg bg-gray-100 flex items-center justify-center">
                                                <i class="fas fa-tag text-gray-400 text-lg"></i>
                                            </div>
                                        </div>
                                    } *@
                                    <div class="flex-1">
                                        <div class="text-sm font-semibold text-gray-900 mb-1">
                                            @category.Name
                                        </div>
                                        @* @if (!string.IsNullOrEmpty(category.Description))
                                        {
                                            <div class="text-sm text-gray-600 line-clamp-2">
                                                @category.Description
                                            </div>
                                        }
                                        @if (!string.IsNullOrEmpty(category.Slug))
                                        {
                                            <div class="text-xs text-gray-500 mt-1">
                                                <i class="fas fa-link mr-1"></i>
                                                /category/@category.Slug
                                            </div>
                                        } *@
                                    </div>
                                </div>
                            </td>
                            <td class="px-6 py-4">
                                @if (category.ParentCategory != null)
                                {
                                    <div class="flex items-center">
                                        <div class="w-2 h-2 bg-gray-300 rounded-full mr-2"></div>
                                        <span class="text-sm text-gray-600">@category.ParentCategory.Name</span>
                                    </div>
                                }
                                else
                                {
                                    <span class="inline-flex items-center px-2.5 py-0.5 rounded-full text-xs font-medium bg-purple-100 text-purple-800">
                                        <i class="fas fa-crown mr-1"></i>
                                        Gốc
                                    </span>
                                }
                            </td>
                            <td class="px-6 py-4 text-center">
                                @* <div class="text-sm font-medium text-gray-900">
                                    @category.BooksCount
                                </div>
                                @if (category.BooksCount > 0)
                                {
                                    <a href="@Url.Action("Books", "Admin", new { categoryId = category.Id })" 
                                       class="text-xs text-primary-600 hover:text-primary-800 mt-1 inline-block">
                                        Xem sách
                                    </a>
                                } *@
                            </td>
                            <td class="px-6 py-4 text-center">
                                <div class="flex items-center justify-center">
                                    @* <input type="number" value="@category.DisplayOrder" 
                                           onchange="updateDisplayOrder(@category.Id, this.value)"
                                           class="w-16 px-2 py-1 text-sm border border-gray-300 rounded focus:ring-2 focus:ring-primary-500 focus:border-primary-500 text-center"> *@
                                </div>
                            </td>
                            <td class="px-6 py-4 text-center">
                                <div class="flex items-center justify-center">
                                    <label class="relative inline-flex items-center cursor-pointer">
                                        <input type="checkbox" @(category.IsActive ? "checked" : "") 
                                               onchange="toggleCategoryStatus(@category.Id, this.checked)"
                                               class="sr-only peer">
                                        <div class="w-9 h-5 bg-gray-200 peer-focus:outline-none peer-focus:ring-4 peer-focus:ring-primary-300 rounded-full peer peer-checked:after:translate-x-full peer-checked:after:border-white after:content-[''] after:absolute after:top-[2px] after:left-[2px] after:bg-white after:rounded-full after:h-4 after:w-4 after:transition-all peer-checked:bg-primary-600"></div>
                                    </label>
                                </div>
                            </td>
                            <td class="px-6 py-4 text-center">
                                <div class="flex items-center justify-center space-x-2">
                                    <a href="@Url.Action("CategoryDetails", "Admin", new { area = "Admin", id = category.Id })"
                                       class="inline-flex items-center justify-center w-8 h-8 rounded-full text-blue-600 hover:bg-blue-50 focus:outline-none focus:ring-2 focus:ring-blue-500 transition-colors"
                                       title="Xem chi tiết">
                                        <i class="fas fa-eye text-sm"></i>
                                    </a>
                                    <a href="@Url.Action("EditCategory", "Admin", new { area = "Admin", id = category.Id })"
                                       class="inline-flex items-center justify-center w-8 h-8 rounded-full text-green-600 hover:bg-green-50 focus:outline-none focus:ring-2 focus:ring-green-500 transition-colors"
                                       title="Chỉnh sửa">
                                        <i class="fas fa-edit text-sm"></i>
                                    </a>
                                    @* @if (category.BooksCount == 0)
                                    {
                                        <button type="button" 
                                                onclick="confirmDelete(@category.Id, '@category.Name')"
                                                class="inline-flex items-center justify-center w-8 h-8 rounded-full text-red-600 hover:bg-red-50 focus:outline-none focus:ring-2 focus:ring-red-500 transition-colors"
                                                title="Xóa danh mục">
                                            <i class="fas fa-trash-alt text-sm"></i>
                                        </button>
                                    }
                                    else
                                    {
                                        <button type="button" 
                                                class="inline-flex items-center justify-center w-8 h-8 rounded-full text-gray-400 cursor-not-allowed"
                                                title="Không thể xóa danh mục có sách"
                                                disabled>
                                            <i class="fas fa-trash-alt text-sm"></i>
                                        </button>
                                    } *@
                                </div>
                            </td>
                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <!-- Pagination -->
        @if (Model.TotalPages > 1)
        {
            <div class="px-6 py-4 bg-gray-50 border-t border-gray-200">
                <div class="flex items-center justify-between">
                    <div class="flex items-center text-sm text-gray-700">
                        <span>Hiển thị <span class="font-medium">@((Model.CurrentPage - 1) * Model.PageSize + 1)</span> đến <span class="font-medium">@Math.Min(Model.CurrentPage * Model.PageSize, Model.TotalCount)</span> trong tổng số <span class="font-medium">@Model.TotalCount</span> kết quả</span>
                    </div>
                    
                    <nav class="relative z-0 inline-flex rounded-md shadow-sm -space-x-px" aria-label="Pagination">
                        @if (Model.CurrentPage > 1)
                        {
                            <a href="@Url.Action("Categories", "Admin", new { 
                                page = Model.CurrentPage - 1, 
                                pageSize = Model.PageSize, 
                                searchTerm = Model.SearchTerm, 
                                parentCategoryId = Model.ParentCategoryId, 
                                isActive = Model.IsActive,
                                sortBy = Model.SortBy
                            })" 
                               class="relative inline-flex items-center px-2 py-2 rounded-l-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 focus:z-10 focus:outline-none focus:ring-1 focus:ring-primary-500 focus:border-primary-500">
                                <i class="fas fa-chevron-left"></i>
                            </a>
                        }

                        @for (int i = Math.Max(1, Model.CurrentPage - 2); i <= Math.Min(Model.TotalPages, Model.CurrentPage + 2); i++)
                        {
                            @if (i == Model.CurrentPage)
                            {
                                <span class="relative inline-flex items-center px-4 py-2 border border-primary-500 bg-primary-50 text-sm font-medium text-primary-600">
                                    @i
                                </span>
                            }
                            else
                            {
                                <a href="@Url.Action("Categories", "Admin", new { 
                                    page = i, 
                                    pageSize = Model.PageSize, 
                                    searchTerm = Model.SearchTerm, 
                                    parentCategoryId = Model.ParentCategoryId, 
                                    isActive = Model.IsActive,
                                    sortBy = Model.SortBy 
                                })" 
                                   class="relative inline-flex items-center px-4 py-2 border border-gray-300 bg-white text-sm font-medium text-gray-700 hover:bg-gray-50 focus:z-10 focus:outline-none focus:ring-1 focus:ring-primary-500 focus:border-primary-500">
                                    @i
                                </a>
                            }
                        }

                        @if (Model.CurrentPage < Model.TotalPages)
                        {
                            <a href="@Url.Action("Categories", "Admin", new { 
                                page = Model.CurrentPage + 1, 
                                pageSize = Model.PageSize, 
                                searchTerm = Model.SearchTerm, 
                                parentCategoryId = Model.ParentCategoryId, 
                                isActive = Model.IsActive,
                                sortBy = Model.SortBy 
                            })" 
                               class="relative inline-flex items-center px-2 py-2 rounded-r-md border border-gray-300 bg-white text-sm font-medium text-gray-500 hover:bg-gray-50 focus:z-10 focus:outline-none focus:ring-1 focus:ring-primary-500 focus:border-primary-500">
                                <i class="fas fa-chevron-right"></i>
                            </a>
                        }
                    </nav>
                </div>
            </div>
        }
    }
    else
    {
        <!-- Empty State -->
        <div class="text-center py-12">
            <div class="mx-auto h-24 w-24 text-gray-400 mb-4">
                <i class="fas fa-tags text-6xl"></i>
            </div>
            <h3 class="text-lg font-medium text-gray-900 mb-2">Không tìm thấy danh mục nào</h3>
            <p class="text-gray-500 mb-6">Không có danh mục nào phù hợp với tiêu chí tìm kiếm của bạn.</p>
            <div class="flex justify-center gap-3">
                <a href="@Url.Action("Categories", "Admin")" 
                   class="inline-flex items-center px-4 py-2 border border-gray-300 text-sm font-medium rounded-lg text-gray-700 bg-white hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500">
                    <i class="fas fa-refresh mr-2"></i>
                    Xem tất cả
                </a>
                <a href="@Url.Action("CreateCategory", "Admin", new { area = "Admin" })" 
                   class="inline-flex items-center px-4 py-2 border border-transparent text-sm font-medium rounded-lg text-white bg-primary-600 hover:bg-primary-700 focus:outline-none focus:ring-2 focus:ring-offset-2 focus:ring-primary-500">
                    <i class="fas fa-plus mr-2"></i>
                    Thêm danh mục đầu tiên
                </a>
            </div>
        </div>
    }
</div>

<!-- Delete Confirmation Modal -->
<div id="deleteModal" class="hidden fixed inset-0 bg-gray-600 bg-opacity-50 overflow-y-auto h-full w-full z-50">
    <div class="relative top-20 mx-auto p-5 border w-96 shadow-lg rounded-md bg-white">
        <div class="mt-3 text-center">
            <div class="mx-auto flex items-center justify-center h-12 w-12 rounded-full bg-red-100 mb-4">
                <i class="fas fa-exclamation-triangle text-red-600 text-xl"></i>
            </div>
            <h3 class="text-lg font-medium text-gray-900 mb-2">Xác nhận xóa danh mục</h3>
            <div class="mt-2 px-7 py-3">
                <p class="text-sm text-gray-500 mb-4">
                    Bạn có chắc chắn muốn xóa danh mục "<span id="categoryName" class="font-medium"></span>"? 
                    Hành động này không thể hoàn tác.
                </p>
            </div>
            <div class="flex justify-center gap-3">
                <button id="cancelDelete" type="button" 
                        class="px-4 py-2 bg-white text-gray-500 border border-gray-300 rounded-lg hover:bg-gray-50 focus:outline-none focus:ring-2 focus:ring-gray-300">
                    Hủy
                </button>
                <button id="confirmDelete" type="button" 
                        class="px-4 py-2 bg-red-600 text-white rounded-lg hover:bg-red-700 focus:outline-none focus:ring-2 focus:ring-red-500">
                    <i class="fas fa-trash-alt mr-2"></i>
                    Xóa danh mục
                </button>
            </div>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        let categoryToDelete = null;

        // Helper function to get category color class based on ID
        function getCategoryColor(categoryId) {
            const colors = ['bg-blue-500', 'bg-green-500', 'bg-purple-500', 'bg-red-500', 'bg-yellow-500', 'bg-indigo-500', 'bg-pink-500', 'bg-gray-500'];
            return colors[categoryId % colors.length];
        }

        // Delete confirmation
        function confirmDelete(categoryId, categoryName) {
            categoryToDelete = categoryId;
            document.getElementById('categoryName').textContent = categoryName;
            document.getElementById('deleteModal').classList.remove('hidden');
        }

        // Cancel delete
        document.getElementById('cancelDelete').addEventListener('click', function() {
            document.getElementById('deleteModal').classList.add('hidden');
            categoryToDelete = null;
        });

        // Confirm delete
        document.getElementById('confirmDelete').addEventListener('click', function() {
            if (categoryToDelete) {
                // Show loading
                this.innerHTML = '<i class="fas fa-spinner fa-spin mr-2"></i>Đang xóa...';
                this.disabled = true;
                
                // Perform delete
                fetch(`/Admin/Admin/DeleteCategory/${categoryToDelete}`, {
                    method: 'DELETE',
                    headers: {
                        'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value || ''
                    }
                })
                .then(response => response.json())
                .then(data => {
                    if (data.success) {
                        showNotification('Danh mục đã được xóa thành công!', 'success');
                        setTimeout(() => window.location.reload(), 1000);
                    } else {
                        showNotification(data.message || 'Có lỗi xảy ra khi xóa danh mục!', 'error');
                    }
                })
                .catch(error => {
                    console.error('Error:', error);
                    showNotification('Có lỗi xảy ra khi xóa danh mục!', 'error');
                })
                .finally(() => {
                    document.getElementById('deleteModal').classList.add('hidden');
                    categoryToDelete = null;
                });
            }
        });

        // Toggle category status
        function toggleCategoryStatus(categoryId, isActive) {
            fetch(`/Admin/Admin/ToggleCategoryStatus/${categoryId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value || ''
                },
                body: JSON.stringify({ isActive: isActive })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    showNotification(`Danh mục đã được ${isActive ? 'kích hoạt' : 'tắt'} thành công!`, 'success');
                } else {
                    showNotification(data.message || 'Có lỗi xảy ra!', 'error');
                    // Revert toggle if failed
                    event.target.checked = !isActive;
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showNotification('Có lỗi xảy ra!', 'error');
                // Revert toggle if failed
                event.target.checked = !isActive;
            });
        }

        // Update display order
        function updateDisplayOrder(categoryId, displayOrder) {
            fetch(`/Admin/Admin/UpdateCategoryDisplayOrder/${categoryId}`, {
                method: 'POST',
                headers: {
                    'Content-Type': 'application/json',
                    'RequestVerificationToken': document.querySelector('input[name="__RequestVerificationToken"]')?.value || ''
                },
                body: JSON.stringify({ displayOrder: parseInt(displayOrder) })
            })
            .then(response => response.json())
            .then(data => {
                if (data.success) {
                    showNotification('Thứ tự hiển thị đã được cập nhật!', 'success');
                } else {
                    showNotification(data.message || 'Có lỗi xảy ra!', 'error');
                }
            })
            .catch(error => {
                console.error('Error:', error);
                showNotification('Có lỗi xảy ra!', 'error');
            });
        }

        // Export categories
        function exportCategories() {
            const params = new URLSearchParams(window.location.search);
            const exportUrl = `/Admin/Admin/ExportCategories?${params.toString()}`;
            window.open(exportUrl, '_blank');
        }

        // Select all functionality
        document.getElementById('select-all').addEventListener('change', function() {
            const checkboxes = document.querySelectorAll('.category-checkbox');
            checkboxes.forEach(cb => cb.checked = this.checked);
            updateBulkActionButton();
        });

        document.getElementById('select-all-header').addEventListener('change', function() {
            const checkboxes = document.querySelectorAll('.category-checkbox');
            checkboxes.forEach(cb => cb.checked = this.checked);
            updateBulkActionButton();
        });

        // Individual checkbox change
        document.querySelectorAll('.category-checkbox').forEach(checkbox => {
            checkbox.addEventListener('change', updateBulkActionButton);
        });

        function updateBulkActionButton() {
            const selected = document.querySelectorAll('.category-checkbox:checked').length;
            const bulkButton = document.getElementById('bulk-action-btn');
            
            if (selected > 0) {
                bulkButton.classList.remove('hidden');
                bulkButton.textContent = `Thao tác (${selected})`;
            } else {
                bulkButton.classList.add('hidden');
            }
        }

        // Close modal on click outside
        document.getElementById('deleteModal').addEventListener('click', function(e) {
            if (e.target === this) {
                this.classList.add('hidden');
                categoryToDelete = null;
            }
        });

        // Notification function
        function showNotification(message, type = 'info') {
            const notification = document.createElement('div');
            notification.className = `fixed top-4 right-4 z-50 max-w-sm w-full bg-white border rounded-lg shadow-lg transform transition-all duration-300 ${
                type === 'success' ? 'border-green-200' : 
                type === 'error' ? 'border-red-200' : 'border-blue-200'
            }`;
            
            notification.innerHTML = `
                <div class="p-4">
                    <div class="flex items-start">
                        <div class="flex-shrink-0">
                            <i class="fas ${
                                type === 'success' ? 'fa-check-circle text-green-400' : 
                                type === 'error' ? 'fa-times-circle text-red-400' : 'fa-info-circle text-blue-400'
                            }"></i>
                        </div>
                        <div class="ml-3 w-0 flex-1 pt-0.5">
                            <p class="text-sm font-medium text-gray-900">${message}</p>
                        </div>
                        <div class="ml-4 flex-shrink-0 flex">
                            <button class="inline-flex text-gray-400 hover:text-gray-500" onclick="this.parentElement.parentElement.parentElement.parentElement.remove()">
                                <i class="fas fa-times"></i>
                            </button>
                        </div>
                    </div>
                </div>
            `;
            
            document.body.appendChild(notification);
            
            // Auto remove after 5 seconds
            setTimeout(() => {
                if (notification.parentElement) {
                    notification.remove();
                }
            }, 5000);
        }
    </script>
}

@functions {
    // Helper function for category colors
    string GetCategoryColor(int categoryId)
    {
        var colors = new[] { "bg-blue-500", "bg-green-500", "bg-purple-500", "bg-red-500", "bg-yellow-500", "bg-indigo-500", "bg-pink-500", "bg-gray-500" };
        return colors[categoryId % colors.Length];
    }
}