@using BookStoreMVC.Models.ViewModels
@model BookListViewModel

@if (Model.TotalPages > 1)
{
    <nav class="flex items-center justify-between border-t border-gray-200 bg-white px-4 py-3 sm:px-6 mt-8" aria-label="Pagination">
        <!-- Mobile pagination info -->
        <div class="flex flex-1 justify-between sm:hidden">
            @if (Model.HasPreviousPage)
            {
                <a href="@Url.Action("Index", new { page = Model.PageNumber - 1, searchTerm = ViewBag.SearchQuery, categoryId = ViewBag.CategoryId })" 
                   class="relative inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50 transition-colors">
                    <i class="fas fa-chevron-left mr-1"></i>
                    Trước
                </a>
            }
            else
            {
                <span class="relative inline-flex items-center rounded-md border border-gray-300 bg-gray-100 px-4 py-2 text-sm font-medium text-gray-400">
                    <i class="fas fa-chevron-left mr-1"></i>
                    Trước
                </span>
            }
            
            @if (Model.HasNextPage)
            {
                <a href="@Url.Action("Index", new { page = Model.PageNumber + 1, searchTerm = ViewBag.SearchQuery, categoryId = ViewBag.CategoryId })" 
                   class="relative ml-3 inline-flex items-center rounded-md border border-gray-300 bg-white px-4 py-2 text-sm font-medium text-gray-700 hover:bg-gray-50 transition-colors">
                    Sau
                    <i class="fas fa-chevron-right ml-1"></i>
                </a>
            }
            else
            {
                <span class="relative ml-3 inline-flex items-center rounded-md border border-gray-300 bg-gray-100 px-4 py-2 text-sm font-medium text-gray-400">
                    Sau
                    <i class="fas fa-chevron-right ml-1"></i>
                </span>
            }
        </div>
        
        <!-- Desktop pagination -->
        <div class="hidden sm:flex sm:flex-1 sm:items-center sm:justify-between">
            <div>
                <p class="text-sm text-gray-700">
                    Hiển thị <span class="font-medium">@((Model.PageNumber - 1) * Model.PageSize + 1)</span> đến 
                    <span class="font-medium">@Math.Min(Model.PageNumber * Model.PageSize, Model.TotalCount)</span> trong tổng số 
                    <span class="font-medium">@Model.TotalCount</span> kết quả
                </p>
            </div>
            
            <div>
                <nav class="isolate inline-flex -space-x-px rounded-md shadow-sm" aria-label="Pagination">
                    <!-- Previous Page -->
                    @if (Model.HasPreviousPage)
                    {
                        <a href="@Url.Action("Index", new { page = Model.PageNumber - 1, searchTerm = ViewBag.SearchQuery, categoryId = ViewBag.CategoryId })" 
                           class="relative inline-flex items-center rounded-l-md px-2 py-2 text-gray-400 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 hover:text-gray-700 transition-colors">
                            <i class="fas fa-chevron-left text-sm"></i>
                        </a>
                    }
                    else
                    {
                        <span class="relative inline-flex items-center rounded-l-md px-2 py-2 text-gray-300 ring-1 ring-inset ring-gray-300 bg-gray-100">
                            <i class="fas fa-chevron-left text-sm"></i>
                        </span>
                    }
                    
                    <!-- Page Numbers -->
                    @{
                        var startPage = Math.Max(1, Model.PageNumber - 2);
                        var endPage = Math.Min(Model.TotalPages, Model.PageNumber + 2);
                    }
                    
                    @if (startPage > 1)
                    {
                        <a href="@Url.Action("Index", new { page = 1, searchTerm = ViewBag.SearchQuery, categoryId = ViewBag.CategoryId })" 
                           class="relative inline-flex items-center px-4 py-2 text-sm font-semibold text-gray-900 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 transition-colors">
                            1
                        </a>
                        
                        @if (startPage > 2)
                        {
                            <span class="relative inline-flex items-center px-4 py-2 text-sm font-semibold text-gray-700 ring-1 ring-inset ring-gray-300">
                                ...
                            </span>
                        }
                    }
                    
                    @for (int i = startPage; i <= endPage; i++)
                    {
                        @if (i == Model.PageNumber)
                        {
                            <span class="relative z-10 inline-flex items-center bg-primary-600 px-4 py-2 text-sm font-semibold text-white">
                                @i
                            </span>
                        }
                        else
                        {
                            <a href="@Url.Action("Index", new { page = i, searchTerm = ViewBag.SearchQuery, categoryId = ViewBag.CategoryId })" 
                               class="relative inline-flex items-center px-4 py-2 text-sm font-semibold text-gray-900 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 transition-colors">
                                @i
                            </a>
                        }
                    }
                    
                    @if (endPage < Model.TotalPages)
                    {
                        @if (endPage < Model.TotalPages - 1)
                        {
                            <span class="relative inline-flex items-center px-4 py-2 text-sm font-semibold text-gray-700 ring-1 ring-inset ring-gray-300">
                                ...
                            </span>
                        }
                        
                        <a href="@Url.Action("Index", new { page = Model.TotalPages, searchTerm = ViewBag.SearchQuery, categoryId = ViewBag.CategoryId })" 
                           class="relative inline-flex items-center px-4 py-2 text-sm font-semibold text-gray-900 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 transition-colors">
                            @Model.TotalPages
                        </a>
                    }
                    
                    <!-- Next Page -->
                    @if (Model.HasNextPage)
                    {
                        <a href="@Url.Action("Index", new { page = Model.PageNumber + 1, searchTerm = ViewBag.SearchQuery, categoryId = ViewBag.CategoryId })" 
                           class="relative inline-flex items-center rounded-r-md px-2 py-2 text-gray-400 ring-1 ring-inset ring-gray-300 hover:bg-gray-50 hover:text-gray-700 transition-colors">
                            <i class="fas fa-chevron-right text-sm"></i>
                        </a>
                    }
                    else
                    {
                        <span class="relative inline-flex items-center rounded-r-md px-2 py-2 text-gray-300 ring-1 ring-inset ring-gray-300 bg-gray-100">
                            <i class="fas fa-chevron-right text-sm"></i>
                        </span>
                    }
                </nav>
            </div>
        </div>
    </nav>
}